{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/development/REACT/books/frontend/src/context/books.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BooksContext = /*#__PURE__*/createContext();\nfunction Provider({\n  children\n}) {\n  _s();\n  const [books, setBooks] = useState([]);\n  const fetchBooks = async () => {\n    const response = await axios.get('http://localhost:3001/books');\n    setBooks(response.data);\n  };\n  const createBook = async (author, title, genre, pages, image) => {\n    const response = await axios.post('http://localhost:3001/books', {\n      author,\n      title,\n      genre,\n      pages,\n      image\n    });\n\n    //console.log(response)\n\n    const updateBooks = [...books, response.data];\n    setBooks(updateBooks);\n  };\n  const deleteBookById = async id => {\n    await axios.delete(`http://localhost:3001/books/${id}`);\n    const updatedBooks = books.filter(book => {\n      return book.id != id;\n    });\n    setBooks(updatedBooks);\n  };\n  const editBookById = async (id, newAuthor, newTitle, newGenre, newPages, newImage) => {\n    const response = await axios.put(`http://localhost:3001/books/${id}`, {\n      author: newAuthor,\n      title: newTitle,\n      genre: newGenre,\n      pages: newPages,\n      image: newImage\n    });\n    const updatedBooks = books.map(book => {\n      if (book.id == id) {\n        return {\n          ...book,\n          ...response.data\n        };\n      }\n      return book;\n    });\n    setBooks(updatedBooks);\n  };\n  const valueToShare = {\n    books,\n    deleteBookById,\n    editBookById,\n    createBook,\n    fetchBooks\n  };\n  return /*#__PURE__*/_jsxDEV(BooksContext.Provider, {\n    value: valueToShare,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n}\n_s(Provider, \"/iW9mSwgc4d+8Agrl++FSS1ccl8=\");\n_c = Provider;\nexport { Provider };\nexport default BooksContext;\n\n// when we would like to import that: import BookContext, {Provider} from..\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["createContext","useState","axios","jsxDEV","_jsxDEV","BooksContext","Provider","children","_s","books","setBooks","fetchBooks","response","get","data","createBook","author","title","genre","pages","image","post","updateBooks","deleteBookById","id","delete","updatedBooks","filter","book","editBookById","newAuthor","newTitle","newGenre","newPages","newImage","put","map","valueToShare","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/development/REACT/books/frontend/src/context/books.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport axios from 'axios';\n\nconst BooksContext = createContext();\n\nfunction Provider({ children }) {\n    const [books, setBooks] = useState([])\n\n    const fetchBooks = async () => {\n    const response = await axios.get('http://localhost:3001/books')\n    setBooks(response.data)\n  }\n\n\n  const createBook = async (author, title, genre, pages, image) => {\n    const response = await axios.post('http://localhost:3001/books', {\n      author,\n      title,\n      genre,\n      pages,\n      image\n    })\n\n    //console.log(response)\n\n    const updateBooks = [\n      ...books,\n      response.data\n    ]\n\n    setBooks(updateBooks)\n  }\n\n  const deleteBookById = async (id) => {\n    await axios.delete(`http://localhost:3001/books/${id}`)\n\n    const updatedBooks = books.filter((book)=>{\n      return book.id != id;\n    })\n\n    setBooks(updatedBooks)\n  }\n\n  const editBookById = async (id, newAuthor, newTitle, newGenre, newPages, newImage) => {\n    const response = await axios.put(`http://localhost:3001/books/${id}`, {\n      author: newAuthor,\n      title: newTitle,\n      genre: newGenre,\n      pages: newPages,\n      image: newImage\n    });\n\n    const updatedBooks = books.map((book) => {\n      if (book.id == id) {\n        return { ...book, ...response.data };\n      }\n\n      return book;\n    });\n\n    setBooks(updatedBooks);\n  };\n\n  const valueToShare = {\n    books,\n    deleteBookById,\n    editBookById,\n    createBook,\n    fetchBooks\n  }\n\n    return <BooksContext.Provider value={valueToShare}>\n        {children}\n    </BooksContext.Provider>\n}\n\nexport { Provider };\nexport default BooksContext;\n\n// when we would like to import that: import BookContext, {Provider} from.."],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,SAASM,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC;IAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;EACzB,CAAC;EAGD,MAAMC,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC/D,MAAMR,QAAQ,GAAG,MAAMV,KAAK,CAACmB,IAAI,CAAC,6BAA6B,EAAE;MAC/DL,MAAM;MACNC,KAAK;MACLC,KAAK;MACLC,KAAK;MACLC;IACF,CAAC,CAAC;;IAEF;;IAEA,MAAME,WAAW,GAAG,CAClB,GAAGb,KAAK,EACRG,QAAQ,CAACE,IAAI,CACd;IAEDJ,QAAQ,CAACY,WAAW,CAAC;EACvB,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;IACnC,MAAMtB,KAAK,CAACuB,MAAM,CAAE,+BAA8BD,EAAG,EAAC,CAAC;IAEvD,MAAME,YAAY,GAAGjB,KAAK,CAACkB,MAAM,CAAEC,IAAI,IAAG;MACxC,OAAOA,IAAI,CAACJ,EAAE,IAAIA,EAAE;IACtB,CAAC,CAAC;IAEFd,QAAQ,CAACgB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAOL,EAAE,EAAEM,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IACpF,MAAMtB,QAAQ,GAAG,MAAMV,KAAK,CAACiC,GAAG,CAAE,+BAA8BX,EAAG,EAAC,EAAE;MACpER,MAAM,EAAEc,SAAS;MACjBb,KAAK,EAAEc,QAAQ;MACfb,KAAK,EAAEc,QAAQ;MACfb,KAAK,EAAEc,QAAQ;MACfb,KAAK,EAAEc;IACT,CAAC,CAAC;IAEF,MAAMR,YAAY,GAAGjB,KAAK,CAAC2B,GAAG,CAAER,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACJ,EAAE,IAAIA,EAAE,EAAE;QACjB,OAAO;UAAE,GAAGI,IAAI;UAAE,GAAGhB,QAAQ,CAACE;QAAK,CAAC;MACtC;MAEA,OAAOc,IAAI;IACb,CAAC,CAAC;IAEFlB,QAAQ,CAACgB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMW,YAAY,GAAG;IACnB5B,KAAK;IACLc,cAAc;IACdM,YAAY;IACZd,UAAU;IACVJ;EACF,CAAC;EAEC,oBAAOP,OAAA,CAACC,YAAY,CAACC,QAAQ;IAACgC,KAAK,EAAED,YAAa;IAAA9B,QAAA,EAC7CA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAC5B;AAAClC,EAAA,CArEQF,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAuEjB,SAASA,QAAQ;AACjB,eAAeD,YAAY;;AAE3B;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}